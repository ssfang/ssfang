{"name":"博客","tagline":"Java 注解","body":"```java\r\nimport java.lang.annotation.ElementType;\r\nimport java.lang.annotation.Retention;\r\nimport java.lang.annotation.RetentionPolicy;\r\nimport java.lang.annotation.Target;\r\nimport java.util.Arrays;\r\n\r\n@SuppressWarnings(\"unused\")\r\npublic class ModelTest {\r\n\tpublic static void main(String[] args) {\r\n\t\tprintColumnUnique(InvalidUniqueModel1.class);\r\n\t\tSystem.out.println();\r\n\t\tprintColumnUnique(InvalidUniqueModel2.class);\r\n\t\tSystem.out.println();\r\n\t\tprintColumnUnique(SingleUniqueModel.class);\r\n\t\tSystem.out.println();\r\n\t\tprintColumnUnique(MultiUniqueModel.class);\r\n\t}\r\n\r\n\tpublic static void printColumnUnique(Class<?> clz) {\r\n\t\tColumnUnique columnUnique = clz.getAnnotation(ColumnUnique.class);\r\n\t\tString name = columnUnique.Name();\r\n\t\tString[] columns = columnUnique.Columns();\r\n\r\n\t\tif (name != columnUnique.Name()) {\r\n\t\t\tSystem.out.println(\"两次获取注解字段Name的对象（字符串）不是同一个\");\r\n\t\t}\r\n\t\tif (columns != columnUnique.Columns()) {\r\n\t\t\tSystem.out.println(\"两次获取注解字段Columns的对象（字符串数组）不是同一个\");\r\n\t\t}\r\n\r\n\t\tSystem.out.println(\"Name@\" + Integer.toHexString(name.hashCode()) + \" =  \\\"\" + name + \"\\\"\");\r\n\t\tSystem.out.println(\"Columns@\" + Integer.toHexString(columns.hashCode()) + \" = \"\r\n\t\t\t\t+ Arrays.toString(columns));\r\n\r\n\t\tSystem.out.println(\"columnUnique = \" + columnUnique);\r\n\t}\r\n\r\n\t@Target(ElementType.TYPE)\r\n\t@Retention(RetentionPolicy.RUNTIME)\r\n\tpublic @interface ColumnUnique {\r\n\t\tpublic String Name() default \"\";\r\n\r\n\t\tpublic String[] Columns() default \"\"; // \"\"和{}代表一个意思\r\n\r\n\t\tpublic String[] Columns2() default {}; // {}和\"\"代表一个意思\r\n\r\n\t\tpublic int[] Ints() default {}; // 必须是{}\r\n\r\n\t\t// 名为value的属性，在注解时只必须设置一个属性时可以不使用键=值（value=xx）形式直接@ColumnUnique(\"22\")\r\n\t\t// 注解行为@XXAnnotation(xx)时默认是为value属性设置值\r\n\t\tpublic String value() default \"\";\r\n\t}\r\n\r\n\t@ColumnUnique()\r\n\tprivate static class InvalidUniqueModel1 {\r\n\t\tprivate Long id;\r\n\t\tprivate long time;\r\n\t\tprivate String str;\r\n\t\tprivate byte[] digest;\r\n\t\tprivate Object reserved;\r\n\t}\r\n\r\n\t@ColumnUnique(Columns = {})\r\n\tprivate static class InvalidUniqueModel2 {\r\n\t\tprivate Long id;\r\n\t\tprivate long time;\r\n\t\tprivate String str;\r\n\t\tprivate byte[] digest;\r\n\t\tprivate Object reserved;\r\n\t}\r\n\r\n\t@ColumnUnique(Name = \"uid\", Columns = { \"id\" })\r\n\tprivate static class SingleUniqueModel {\r\n\t\tprivate Long id;\r\n\t\tprivate long time;\r\n\t\tprivate String str;\r\n\t\tprivate byte[] digest;\r\n\t\tprivate Object reserved;\r\n\t}\r\n\r\n\t@ColumnUnique(Name = \"uid\", Columns = { \"mod\", \"id\" })\r\n\tprivate static class MultiUniqueModel {\r\n\t\tprivate int mod;\r\n\t\tprivate Long id;\r\n\t\tprivate long time;\r\n\t\tprivate String str;\r\n\t\tprivate byte[] digest;\r\n\t\tprivate Object reserved;\r\n\t}\r\n}\r\n\r\n```","google":"UA-72133624-1","note":"Don't delete this file! It's used internally to help with page regeneration."}